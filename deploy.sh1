#!/bin/bash

echo "🔍 Searching for *.sql files..."

SQL_FILES=$(find . -type f -name "*.sql")

if [[ -z "$SQL_FILES" ]]; then
  echo "❌ No .sql files found!"
  exit 1
fi

for SQL_FILE in $SQL_FILES; do
  echo "---------------------------------------"
  echo "➡️ File: $SQL_FILE"

  NAME=$(grep -iE 'CREATE[[:space:]]+(DEFINER[[:space:]]*=[^ ]+[[:space:]]*)?(PROCEDURE|FUNCTION)[[:space:]]+`[^`]+`' "$SQL_FILE" | \
    sed -E 's/.*(PROCEDURE|FUNCTION)[[:space:]]+`([^`]+)`.*/\2/I' | head -n 1)

  if [[ -z "$NAME" ]]; then
    echo "⚠️  No PROCEDURE or FUNCTION found — skipping."
    continue
  fi

  echo "➡️ SP/FN Name: $NAME"

  TYPE=$(grep -iE 'CREATE[[:space:]]+(DEFINER[[:space:]]*=[^ ]+[[:space:]]*)?(PROCEDURE|FUNCTION)[[:space:]]+`[^`]+`' "$SQL_FILE" | \
    sed -E 's/.*(PROCEDURE|FUNCTION).*/\1/I' | head -n 1)

  echo "📚 Detected TYPE: $TYPE"

  # 1️⃣ Check if it exists
  EXISTS=$(mysql -N -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" -e "
    SELECT COUNT(*) FROM INFORMATION_SCHEMA.ROUTINES 
    WHERE ROUTINE_SCHEMA = '$DB_NAME' AND ROUTINE_TYPE = UPPER('$TYPE') AND ROUTINE_NAME = '$NAME';
  ")

  if [[ "$EXISTS" -eq 1 ]]; then
    echo "✅ $TYPE $NAME exists — comparing definitions..."

    # 2️⃣ Dump current DB version
    mysql -N -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" -e "SHOW CREATE $TYPE \`$NAME\`\\G" > "__db_create.sql"

    # 3️⃣ Extract CREATE part from the file for fair comparison
    grep -i -A 1000 'CREATE' "$SQL_FILE" | sed '/^DELIMITER/Id' > "__file_create.sql"

    # Normalize both (remove DEFINER and whitespace)
    sed -i -E 's/DEFINER=`[^`]+`@`[^`]+`//g; s/[[:space:]]+/ /g' __db_create.sql
    sed -i -E 's/DEFINER=`[^`]+`@`[^`]+`//g; s/[[:space:]]+/ /g' __file_create.sql

    DIFF=$(diff -q __db_create.sql __file_create.sql)

    if [[ -z "$DIFF" ]]; then
      echo "✅ No changes detected — skipping deploy for $NAME"
      rm -f __db_create.sql __file_create.sql
      continue
    else
      echo "🔄 Changes detected — dropping existing $TYPE $NAME"
      mysql -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" -e "DROP $TYPE IF EXISTS \`$NAME\`;"
      rm -f __db_create.sql __file_create.sql
    fi
  else
    echo "🆕 $TYPE $NAME does not exist — will create new."
  fi

  # 4️⃣ Validate using TEMP
  TEMP_NAME="${NAME}_temp"
  TEMP_SQL="__temp.sql"

  sed -E "s/(${TYPE}[[:space:]]+)(\`?$NAME\`?)/\\1\`$TEMP_NAME\`/I" "$SQL_FILE" > "$TEMP_SQL"

  echo "📤 Testing temp: $TEMP_NAME"
  mysql -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" < "$TEMP_SQL"

  if [[ $? -ne 0 ]]; then
    echo "❌ Temp $TYPE failed for $SQL_FILE"
    rm -f "$TEMP_SQL"
    continue
  fi

  echo "✅ Temp $TYPE OK — cleaning up temp"
  mysql -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" -e "DROP $TYPE IF EXISTS \`$TEMP_NAME\`;"

  echo "🚀 Deploying original: $NAME"
  mysql -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" < "$SQL_FILE"

  if [[ $? -eq 0 ]]; then
    echo "✅ Deployed: $NAME"
  else
    echo "❌ Deploy failed: $NAME"
  fi

  rm -f "$TEMP_SQL"

done
